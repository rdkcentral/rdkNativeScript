/**
* If not stated otherwise in this file or this component's LICENSE
* file the following copyright and licenses apply:
*
* Copyright 2024 RDK Management
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
**/

diff --git a/src/xkbcomp/parser.y b/src/xkbcomp/parser.y
index ead20165..e12c41be 100644
--- a/src/xkbcomp/parser.y
+++ b/src/xkbcomp/parser.y
@@ -215,15 +215,13 @@ resolve_keysym(const char *name, xkb_keysym_t *sym_rtrn)
 %type <geom>    DoodadDecl
 %type <file>    XkbFile XkbMapConfigList XkbMapConfig
 %type <file>    XkbCompositeMap
-
+/*
 %destructor { FreeStmt((ParseCommon *) $$); }
     <any> <expr> <var> <vmod> <interp> <keyType> <syms> <modMask> <groupCompat>
     <ledMap> <ledName> <keyCode> <keyAlias>
-/* The destructor also runs on the start symbol when the parser *succeeds*.
- * The `if` here catches this case. */
 %destructor { if (!param->rtrn) FreeXkbFile($$); } <file>
 %destructor { free($$); } <str>
-
+*/
 %%
 
 /*
@@ -778,7 +776,7 @@ parse(struct xkb_context *ctx, struct scanner *scanner, const char *map)
     struct parser_param param = {
         .scanner = scanner,
         .ctx = ctx,
-        .rtrn = NULL,
+        /*.rtrn = NULL,*/
     };
 
     /*
@@ -808,7 +806,7 @@ parse(struct xkb_context *ctx, struct scanner *scanner, const char *map)
                 FreeXkbFile(param.rtrn);
             }
         }
-        param.rtrn = NULL;
+        /*param.rtrn = NULL;*/
     }
 
     if (ret != 0) {
