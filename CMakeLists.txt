# If not stated otherwise in this file or this component's license file the
# following copyright and licenses apply:
#
# Copyright 2024 RDK Management
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

project("JSRuntime")
cmake_minimum_required(VERSION 3.16)
set(JSRUNTIME_LIBRARY_NAME "JSRuntime")
set(JSRUNTIME_ENGINE_DEPENDENT_LIBRARY_NAME "")
set(EXE "JSRuntime")

option(BUILD_JSRUNTIME_APP "BUILD_JSRUNTIME_APP" ON)

option(ENABLE_JSRUNTIME_SERVER "ENABLE_JSRUNTIME_SERVER" OFF)
option(BUILD_JSRUNTIME_CLIENT "BUILD_JSRUNTIME_CLIENT" OFF)
option(NATIVEJS_DEVELOPER_MODE "NATIVEJS_DEVELOPER_MODE" OFF)

#can be jsc or node or v8 or quickjs
option(JSRUNTIME_ENGINE_NAME "JSRUNTIME_ENGINE_NAME" "jsc")
option(ENABLE_JSRUNTIME_ESSOS "ENABLE_JSRUNTIME_ESSOS" OFF)
option(ENABLE_WEBSOCKET_SERVER "ENABLE_WEBSOCKET_SERVER" OFF)
option(ENABLE_REMOTE_INSPECTOR "ENABLE_REMOTE_INSPECTOR" OFF)
option(ENABLE_AAMP_JSBINDINGS "ENABLE_AAMP_JSBINDINGS" OFF)
option(ENABLE_AAMP_JSBINDINGS_STATIC "ENABLE_AAMP_JSBINDINGS_STATIC" OFF)
option(ENABLE_AAMP_JSBINDINGS_DYNAMIC "ENABLE_AAMP_JSBINDINGS_DYNAMIC" OFF)
option(ENABLE_JSRUNTIME_PLAYER "ENABLE_JSRUNTIME_PLAYER" OFF)
option(ENABLE_JSRUNTIME_THUNDER_SECURITYAGENT "ENABLE_JSRUNTIME_THUNDER_SECURITYAGENT" OFF)
option(BUILD_JSRUNTIME_DESKTOP "BUILD_JSRUNTIME_DESKTOP" ON)
option(USE_ETHANLOG "USE_ETHANLOG" OFF)
option(PKG_CONFIG_SYSROOT_DIR "PKG_CONFIG_SYSROOT_DIR" "${CMAKE_CURRENT_SOURCE_DIR}/externals/extlibs")

if(JSRUNTIME_ENGINE_NAME STREQUAL "jsc")
    set(JSRUNTIME_LIBRARY_NAME "JSRuntimeJSC")
    set(EXE "JSRuntimeJSC")
elseif(JSRUNTIME_ENGINE_NAME STREQUAL "quickjs")
    set(JSRUNTIME_LIBRARY_NAME "JSRuntimeQuickJS")
    set(EXE "JSRuntimeQuickJS")
endif (JSRUNTIME_ENGINE_NAME STREQUAL "jsc")

set(JSRUNTIME_COMMON_SOURCE_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/src")
set(JSRUNTIME_SOURCE_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/src/${JSRUNTIME_ENGINE_NAME}")

if (NOT BUILD_JSRUNTIME_DESKTOP)
    set (ENV{PKG_CONFIG_SYSROOT_DIR} ${PKG_CONFIG_SYSROOT_DIR})
else ()
	#set(CMAKE_C_COMPILER "g++")
    	#set(CMAKE_CXX_COMPILER "g++")
    set (PKG_CONFIG_SYSROOT_DIR ${CMAKE_CURRENT_SOURCE_DIR}/externals/extlibs)
    set (ENV{PKG_CONFIG_SYSROOT_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/externals/extlibs)
endif (NOT BUILD_JSRUNTIME_DESKTOP)

set (JSRUNTIME_COMMON_FILES 
	${JSRUNTIME_COMMON_SOURCE_DIRECTORY}/linux/KeyInput.cpp
	${JSRUNTIME_COMMON_SOURCE_DIRECTORY}/JavaScriptContextBase.cpp
	${JSRUNTIME_COMMON_SOURCE_DIRECTORY}/NativeJSRenderer.cpp
	${JSRUNTIME_COMMON_SOURCE_DIRECTORY}/ModuleSettings.cpp
	${JSRUNTIME_COMMON_SOURCE_DIRECTORY}/TimeUtils.cpp
	${JSRUNTIME_COMMON_SOURCE_DIRECTORY}/NativeJSLogger.cpp
)

if (ENABLE_JSRUNTIME_ESSOS)
    set (JSRUNTIME_COMMON_FILES ${JSRUNTIME_COMMON_FILES}
         ${JSRUNTIME_COMMON_SOURCE_DIRECTORY}/EssosInstance.cpp
    )
    add_definitions("-DENABLE_ESSOS")
endif (ENABLE_JSRUNTIME_ESSOS)

if ( ENABLE_REMOTE_INSPECTOR )
    add_definitions("-DENABLE_REMOTE_INSPECTOR")
endif ( ENABLE_REMOTE_INSPECTOR )

if ( ENABLE_JSRUNTIME_PLAYER )
    add_definitions("-DENABLE_JSRUNTIME_PLAYER")
endif ( ENABLE_JSRUNTIME_PLAYER )

if ( ENABLE_AAMP_JSBINDINGS_STATIC )
        set(ENABLE_AAMP_JSBINDINGS ON)
	add_definitions("-DENABLE_AAMP_JSBINDINGS")
	add_definitions("-DENABLE_AAMP_JSBINDINGS_STATIC")
endif ( ENABLE_AAMP_JSBINDINGS_STATIC )

if ( ENABLE_AAMP_JSBINDINGS_DYNAMIC )
        set(ENABLE_AAMP_JSBINDINGS ON)
	add_definitions("-DENABLE_AAMP_JSBINDINGS")
	add_definitions("-DENABLE_AAMP_JSBINDINGS_DYNAMIC")
endif ( ENABLE_AAMP_JSBINDINGS_DYNAMIC )

if (ENABLE_JSRUNTIME_THUNDER_SECURITYAGENT)
    add_definitions("-DENABLE_JSRUNTIME_THUNDER_SECURITYAGENT")
endif (ENABLE_JSRUNTIME_THUNDER_SECURITYAGENT)

include (${JSRUNTIME_SOURCE_DIRECTORY}/include.cmake)
set(JSRUNTIME_APP_FILES
	${JSRUNTIME_COMMON_SOURCE_DIRECTORY}/jsruntime.cpp
)

if ( ENABLE_JSRUNTIME_SERVER )
    add_definitions("-DENABLE_JSRUNTIME_SERVER")
    add_definitions("-DWS_SERVER_PORT=9112")
    set (JSRUNTIME_APP_FILES ${JSRUNTIME_APP_FILES}
        ${JSRUNTIME_COMMON_SOURCE_DIRECTORY}/JSRuntimeServer.cpp
    )
endif ( ENABLE_JSRUNTIME_SERVER )

set(JSRUNTIME_CLIENT_FILES
	${JSRUNTIME_COMMON_SOURCE_DIRECTORY}/JSRuntimeClient.cpp
	${JSRUNTIME_COMMON_SOURCE_DIRECTORY}/NativeJSLogger.cpp
)

add_library(${JSRUNTIME_LIBRARY_NAME} SHARED
        ${JSRUNTIME_COMMON_FILES}
	${JSRUNTIME_ENGINE_FILES}
)

set(JSRUNTIME_INCLUDE_DIRECTORIES ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/include ${CMAKE_CURRENT_SOURCE_DIR}/include/${JSRUNTIME_ENGINE_NAME} ${CMAKE_CURRENT_SOURCE_DIR}/include/linux ${CMAKE_CURRENT_SOURCE_DIR}/src/jsc/jsc_lib ${JSRUNTIME_ENGINE_INCLUDE_DIRECTORIES})

set(JSRUNTIME_LIBRARY_LINK_DIRECTORIES ${JSRUNTIME_ENGINE_LIBRARY_LINK_DIRECTORIES})
set(JSRUNTIME_LINK_LIBRARIES  -lssl -lcrypto -lffi -lcurl -lglib-2.0 -luWS -luv -lz)
set(JSRUNTIME_LINK_LIBRARIES ${JSRUNTIME_ENGINE_LIBRARIES} ${JSRUNTIME_ENGINE_DEPENDENT_LIBRARIES} ${JSRUNTIME_LINK_LIBRARIES})

if (ENABLE_JSRUNTIME_THUNDER_SECURITYAGENT)
    add_definitions("-DENABLE_JSRUNTIME_THUNDER_SECURITYAGENT")
    set(JSRUNTIME_LINK_LIBRARIES ${JSRUNTIME_LINK_LIBRARIES} -lsecurityagent)
endif(ENABLE_JSRUNTIME_THUNDER_SECURITYAGENT)
if (BUILD_JSRUNTIME_DESKTOP)
    set(JSRUNTIME_INCLUDE_DIRECTORIES ${JSRUNTIME_INCLUDE_DIRECTORIES} $ENV{PKG_CONFIG_SYSROOT_DIR}/include $ENV{PKG_CONFIG_SYSROOT_DIR}/include/glib-2.0 $ENV{PKG_CONFIG_SYSROOT_DIR}/include/glib-2.0/glib $ENV{PKG_CONFIG_SYSROOT_DIR}/include/WPEFramework $ENV{PKG_CONFIG_SYSROOT_DIR}/include/uwebsockets)
    set(JSRUNTIME_LIBRARY_LINK_DIRECTORIES ${JSRUNTIME_LIBRARY_LINK_DIRECTORIES}  -L$ENV{PKG_CONFIG_SYSROOT_DIR}/lib)

    if (APPLE)
        set(JSRUNTIME_LIBRARY_PLATFORM_INCLUDE_DIRECTORIES "")
        set(JSRUNTIME_LIBRARY_PLATFORM_LINK_DIRECTORIES "")
    else ()
        set(JSRUNTIME_LIBRARY_PLATFORM_INCLUDE_DIRECTORIES $ENV{PKG_CONFIG_SYSROOT_DIR}/lib/x86_64-linux-gnu/glib-2.0/include)
        set(JSRUNTIME_LIBRARY_PLATFORM_LINK_DIRECTORIES -L$ENV{PKG_CONFIG_SYSROOT_DIR}/lib/x86_64-linux-gnu/)
    endif (APPLE)

    if (ENABLE_JSRUNTIME_ESSOS)
        set(JSRUNTIME_LINK_LIBRARIES ${JSRUNTIME_LINK_LIBRARIES} -lessos)
    endif (ENABLE_JSRUNTIME_ESSOS)

    set(JSRUNTIME_INCLUDE_DIRECTORIES ${JSRUNTIME_INCLUDE_DIRECTORIES} ${JSRUNTIME_LIBRARY_PLATFORM_INCLUDE_DIRECTORIES})
    set(JSRUNTIME_LIBRARY_LINK_DIRECTORIES ${JSRUNTIME_LIBRARY_LINK_DIRECTORIES} ${JSRUNTIME_LIBRARY_PLATFORM_LINK_DIRECTORIES})
    set(JSRUNTIME_LIBRARY_LINK_DIRECTORIES ${JSRUNTIME_LIBRARY_LINK_DIRECTORIES} -L${CMAKE_CURRENT_SOURCE_DIR}/build/)
else ()
    set(JSRUNTIME_INCLUDE_DIRECTORIES ${JSRUNTIME_INCLUDE_DIRECTORIES} $ENV{PKG_CONFIG_SYSROOT_DIR}/usr/include/glib-2.0 $ENV{PKG_CONFIG_SYSROOT_DIR}/usr/lib/glib-2.0/include/ $ENV{PKG_CONFIG_SYSROOT_DIR}/usr/include/rtcore $ENV{PKG_CONFIG_SYSROOT_DIR}/usr/include/WPEFramework $ENV{PKG_CONFIG_SYSROOT_DIR}/usr/include/gstreamer-1.0 $ENV{PKG_CONFIG_SYSROOT_DIR}/usr/include/uwebsockets)
    set(JSRUNTIME_LINK_LIBRARIES ${JSRUNTIME_LINK_LIBRARIES} -lessos)
    set(JSRUNTIME_LIBRARY_LINK_DIRECTORIES ${JSRUNTIME_LIBRARY_LINK_DIRECTORIES} -L${CMAKE_CURRENT_SOURCE_DIR}/../build/)
endif (BUILD_JSRUNTIME_DESKTOP)

if (USE_ETHANLOG)
	message("Enabling Ethan logs")
        add_definitions("-DUSE_ETHANLOG")
	set(JSRUNTIME_LINK_ETHANLIB -lethanlog)
endif (USE_ETHANLOG)

if (BUILD_JSRUNTIME_APP)
    message("Enabling build support for jsruntime app")
    add_executable(jsruntime_app ${JSRUNTIME_APP_FILES})
    add_dependencies(${JSRUNTIME_LIBRARY_NAME} ${JSRUNTIME_ENGINE_DEPENDENT_LIBRARY_NAME})
    add_dependencies(jsruntime_app ${JSRUNTIME_LIBRARY_NAME} ${JSRUNTIME_ENGINE_DEPENDENT_LIBRARY_NAME} )
    target_include_directories(jsruntime_app PRIVATE ${JSRUNTIME_INCLUDE_DIRECTORIES})
    set_target_properties(jsruntime_app PROPERTIES OUTPUT_NAME ${EXE})
    target_link_libraries(jsruntime_app ${JSRUNTIME_LIBRARY_LINK_DIRECTORIES} -l${JSRUNTIME_LIBRARY_NAME} ${JSRUNTIME_LINK_LIBRARIES} ${JSRUNTIME_LINK_ETHANLIB})
endif (BUILD_JSRUNTIME_APP)

if (BUILD_JSRUNTIME_CLIENT)
    add_executable(jsruntime_client ${JSRUNTIME_CLIENT_FILES})
    target_include_directories(jsruntime_client PRIVATE ${JSRUNTIME_INCLUDE_DIRECTORIES})
    set_target_properties(jsruntime_client PROPERTIES OUTPUT_NAME "JSRuntimeClient")
    target_link_libraries(jsruntime_client ${JSRUNTIME_LIBRARY_LINK_DIRECTORIES} ${JSRUNTIME_LINK_ETHANLIB} -lpthread)
endif (BUILD_JSRUNTIME_CLIENT)

set(UWEBSOCKETS_TARGET "Linux")
if (APPLE)
    set(UWEBSOCKETS_TARGET "Darwin")
endif (APPLE)

add_definitions("-std=c++17 -DUSE_LIBUV")
set_target_properties(${JSRUNTIME_LIBRARY_NAME} PROPERTIES
        CXX_STANDARD 17
        CXX_STANDARD_REQUIRED YES)

set_target_properties(${JSRUNTIME_ENGINE_DEPENDENT_LIBRARY_NAME} PROPERTIES
        CXX_STANDARD 17
        CXX_STANDARD_REQUIRED YES)

target_include_directories(${JSRUNTIME_LIBRARY_NAME} PRIVATE ${JSRUNTIME_INCLUDE_DIRECTORIES})
target_link_libraries(${JSRUNTIME_LIBRARY_NAME} PRIVATE ${JSRUNTIME_LIBRARY_LINK_DIRECTORIES} ${JSRUNTIME_LINK_LIBRARIES})

if(NOT JSRUNTIME_ENGINE_DEPENDENT_LIBRARY_NAME STREQUAL "")
    target_include_directories(${JSRUNTIME_ENGINE_DEPENDENT_LIBRARY_NAME} PRIVATE ${JSRUNTIME_INCLUDE_DIRECTORIES})
endif (NOT JSRUNTIME_ENGINE_DEPENDENT_LIBRARY_NAME STREQUAL "")

find_package(CURL)
if (CURL_FOUND)
   include_directories(${CURL_INCLUDE_DIRS})
   target_link_libraries(${JSRUNTIME_LIBRARY_NAME} PRIVATE ${CURL_LIBRARIES})
else (CURL_FOUND)
   message ("Curl/libcurl required.")
endif (CURL_FOUND)


install(TARGETS ${JSRUNTIME_LIBRARY_NAME}
        DESTINATION lib)
